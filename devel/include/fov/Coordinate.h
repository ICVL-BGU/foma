// Generated by gencpp from file fov/Coordinate.msg
// DO NOT EDIT!


#ifndef FOV_MESSAGE_COORDINATE_H
#define FOV_MESSAGE_COORDINATE_H

#include <ros/service_traits.h>


#include <fov/CoordinateRequest.h>
#include <fov/CoordinateResponse.h>


namespace fov
{

struct Coordinate
{

typedef CoordinateRequest Request;
typedef CoordinateResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Coordinate
} // namespace fov


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::fov::Coordinate > {
  static const char* value()
  {
    return "59330ecd12d514a4552b7f072136e8ea";
  }

  static const char* value(const ::fov::Coordinate&) { return value(); }
};

template<>
struct DataType< ::fov::Coordinate > {
  static const char* value()
  {
    return "fov/Coordinate";
  }

  static const char* value(const ::fov::Coordinate&) { return value(); }
};


// service_traits::MD5Sum< ::fov::CoordinateRequest> should match
// service_traits::MD5Sum< ::fov::Coordinate >
template<>
struct MD5Sum< ::fov::CoordinateRequest>
{
  static const char* value()
  {
    return MD5Sum< ::fov::Coordinate >::value();
  }
  static const char* value(const ::fov::CoordinateRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::fov::CoordinateRequest> should match
// service_traits::DataType< ::fov::Coordinate >
template<>
struct DataType< ::fov::CoordinateRequest>
{
  static const char* value()
  {
    return DataType< ::fov::Coordinate >::value();
  }
  static const char* value(const ::fov::CoordinateRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::fov::CoordinateResponse> should match
// service_traits::MD5Sum< ::fov::Coordinate >
template<>
struct MD5Sum< ::fov::CoordinateResponse>
{
  static const char* value()
  {
    return MD5Sum< ::fov::Coordinate >::value();
  }
  static const char* value(const ::fov::CoordinateResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::fov::CoordinateResponse> should match
// service_traits::DataType< ::fov::Coordinate >
template<>
struct DataType< ::fov::CoordinateResponse>
{
  static const char* value()
  {
    return DataType< ::fov::Coordinate >::value();
  }
  static const char* value(const ::fov::CoordinateResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FOV_MESSAGE_COORDINATE_H
